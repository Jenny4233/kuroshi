<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>KuroJump!</title>
  <style>
    body {
      margin: 0;
      overflow: hidden;
      background: #111;
    }
    canvas {
      display: block;
      background: linear-gradient(#444, #222);
    }
  </style>
</head>
<body>
<canvas id="gameCanvas" width="800" height="400"></canvas>
<script>
  const canvas = document.getElementById('gameCanvas');
  const ctx = canvas.getContext('2d');

  // Personagem (Sebastian)
  const player = {
    x: 50,
    y: 300,
    width: 40,
    height: 40,
    color: 'red', // Depois trocamos por sprite
    dy: 0,
    gravity: 0.8,
    jumpPower: -15,
    grounded: false
  };

  // Chão
  const ground = {
    x: 0,
    y: 350,
    width: canvas.width,
    height: 50,
    color: '#333'
  };

  // Itens (rosas)
  const roses = [
    { x: 300, y: 310, width: 20, height: 20 },
    { x: 600, y: 310, width: 20, height: 20 }
  ];

  let score = 0;

  document.addEventListener('keydown', function(e) {
    if (e.code === 'Space' && player.grounded) {
      player.dy = player.jumpPower;
      player.grounded = false;
    }
  });

  function drawRect(obj) {
    ctx.fillStyle = obj.color;
    ctx.fillRect(obj.x, obj.y, obj.width, obj.height);
  }

  function drawRoses() {
    ctx.fillStyle = 'pink';
    roses.forEach(r => ctx.fillRect(r.x, r.y, r.width, r.height));
  }

  function update() {
    // Gravidade
    player.dy += player.gravity;
    player.y += player.dy;

    // Colisão com chão
    if (player.y + player.height >= ground.y) {
      player.y = ground.y - player.height;
      player.dy = 0;
      player.grounded = true;
    }

    // Coleta de rosas
    roses.forEach((r, index) => {
      if (
        player.x < r.x + r.width &&
        player.x + player.width > r.x &&
        player.y < r.y + r.height &&
        player.y + player.height > r.y
      ) {
        roses.splice(index, 1);
        score++;
      }
    });
  }

  function draw() {
    ctx.clearRect(0, 0, canvas.width, canvas.height);

    drawRect(ground);

    player
